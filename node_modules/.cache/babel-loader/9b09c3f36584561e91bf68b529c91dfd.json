{"ast":null,"code":"var _jsxFileName = \"/home/ahrorbek/Documents/ReactLessons/UseReducer/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useReducer } from \"react\";\nimport { Container } from \"./AppStyle\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [name, setName] = useState(' ');\n\n  const reducer = (state, acton) => {\n    rut;\n  };\n\n  const [todos, dispatch] = useReducer(reducer, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      value: name,\n      onChange: e => setName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"LUgfxWSKfI/eL9A9Qf+y1oNk+aQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/ahrorbek/Documents/ReactLessons/UseReducer/src/App.jsx"],"names":["React","useState","useReducer","Container","App","name","setName","reducer","state","acton","rut","todos","dispatch","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,SAASC,SAAT,QAA0B,YAA1B;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAEhB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,GAAD,CAAhC;;AAEA,QAAMM,OAAO,GAAG,CAACC,KAAD,EAAQC,KAAR,KAAgB;AAC9BC,IAAAA,GAAG;AACJ,GAFD;;AAGA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,UAAU,CAACK,OAAD,EAAU,EAAV,CAApC;AAEA,sBACE,QAAC,SAAD;AAAA,2BACE;AAAO,MAAA,KAAK,EAAEF,IAAd;AAAoB,MAAA,QAAQ,EAAGQ,CAAD,IAAKP,OAAO,CAACO,CAAC,CAACC,MAAF,CAASC,KAAV;AAA1C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAdD;;GAAMX,G;;KAAAA,G;AAgBN,eAAeA,GAAf","sourcesContent":["import React, { useState, useReducer } from \"react\";\nimport { Container } from \"./AppStyle\";\n\nconst App = () => {\n  \n  const [name, setName] = useState(' ')\n\n  const reducer = (state, acton)=>{\n    rut\n  }\n  const [todos, dispatch] = useReducer(reducer, [])\n\n  return (\n    <Container>\n      <input value={name} onChange={(e)=>setName(e.target.value)} />\n    </Container>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}