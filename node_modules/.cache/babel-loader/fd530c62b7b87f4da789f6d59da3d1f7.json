{"ast":null,"code":"var _jsxFileName = \"/home/ahrorbek/Documents/ReactLessons/UseReducer/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useReducer } from \"react\";\nimport { Container } from \"./AppStyle\";\nimport ToDo from \"./Todo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [name, setName] = useState(\" \");\n\n  const reducer = (state, action) => {\n    switch (action.type) {\n      case 'add':\n        return [...state, {\n          id: Date.now(),\n          name: action.payload.name,\n          completed: false\n        }];\n\n      default:\n        return state;\n    }\n  };\n\n  const [todos, dispatch] = useReducer(reducer, []);\n\n  const handleSubmit = () => {\n    dispatch({\n      type: \"add\",\n      payload: {\n        name: name\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      value: name,\n      onChange: e => setName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), todos.map(value => {\n      return;\n\n      /*#__PURE__*/\n      _jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(ToDo, {\n          value: value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 10\n        }, this), \";\"]\n      }, void 0, true);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"BEoXJN7vX+Bb/8LBepc64b8RHn4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/ahrorbek/Documents/ReactLessons/UseReducer/src/App.jsx"],"names":["React","useState","useReducer","Container","ToDo","App","name","setName","reducer","state","action","type","id","Date","now","payload","completed","todos","dispatch","handleSubmit","e","target","value","map"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,GAAD,CAAhC;;AAEA,QAAMO,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACjC,YAAOA,MAAM,CAACC,IAAd;AACE,WAAK,KAAL;AACA,eAAO,CAAC,GAAGF,KAAJ,EAAW;AAACG,UAAAA,EAAE,EAAEC,IAAI,CAACC,GAAL,EAAL;AAAiBR,UAAAA,IAAI,EAAEI,MAAM,CAACK,OAAP,CAAeT,IAAtC;AAA4CU,UAAAA,SAAS,EAAE;AAAvD,SAAX,CAAP;;AAEA;AAAU,eAAOP,KAAP;AAJZ;AAMD,GAPD;;AAQA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBhB,UAAU,CAACM,OAAD,EAAU,EAAV,CAApC;;AAEA,QAAMW,YAAY,GAAG,MAAM;AACzBD,IAAAA,QAAQ,CAAC;AAAEP,MAAAA,IAAI,EAAE,KAAR;AAAeI,MAAAA,OAAO,EAAE;AAAET,QAAAA,IAAI,EAAEA;AAAR;AAAxB,KAAD,CAAR;AACD,GAFD;;AAIA,sBACE,QAAC,SAAD;AAAA,4BACE;AAAO,MAAA,KAAK,EAAEA,IAAd;AAAoB,MAAA,QAAQ,EAAGc,CAAD,IAAOb,OAAO,CAACa,CAAC,CAACC,MAAF,CAASC,KAAV;AAA5C;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,OAAO,EAAEH,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA;AAAA;AAAA;AAAA,YAHF,EAKGF,KAAK,CAACM,GAAN,CAAWD,KAAD,IAAW;AACpB;;AACA;AAAA;AAAA,gCACC;AAAA;AAAA;AAAA;AAAA,gBADD,eAEC,QAAC,IAAD;AAAM,UAAA,KAAK,EAAEA;AAAb;AAAA;AAAA;AAAA;AAAA,gBAFD;AAAA;AAID,KANA,CALH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CAhCD;;GAAMjB,G;;KAAAA,G;AAkCN,eAAeA,GAAf","sourcesContent":["import React, { useState, useReducer } from \"react\";\nimport { Container } from \"./AppStyle\";\nimport ToDo from \"./Todo\";\n\nconst App = () => {\n  const [name, setName] = useState(\" \");\n\n  const reducer = (state, action) => {\n    switch(action.type){\n      case 'add' : \n      return [...state, {id: Date.now(), name: action.payload.name, completed: false}]\n      \n      default : return state\n    }\n  };\n  const [todos, dispatch] = useReducer(reducer, []);\n\n  const handleSubmit = () => {\n    dispatch({ type: \"add\", payload: { name: name } });\n  };\n\n  return (\n    <Container>\n      <input value={name} onChange={(e) => setName(e.target.value)} />\n      <button onClick={handleSubmit}>Submit</button>\n      <div>\n      </div>\n      {todos.map((value) => {\n        return\n        <>\n         <br />\n         <ToDo value={value} />;\n         </>\n      })}\n    </Container>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}