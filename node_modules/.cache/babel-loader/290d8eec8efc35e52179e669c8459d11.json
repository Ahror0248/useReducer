{"ast":null,"code":"var _jsxFileName = \"/home/ahrorbek/Documents/ReactLessons/UseReducer/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useReducer } from \"react\";\nimport { Container } from \"./AppStyle\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [state, setState] = useState(0);\n\n  const reducer = (state, action) => {\n    return state;\n  };\n\n  const [count, dispatch] = useReducer(reducer, 0); // const decreament = () => {\n  //   setState(state - 1);\n  // };\n  // const increament = () => {\n  //   setState(state + 1);\n  // };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      children: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"3sXAm7ZS+iTb0/FVuZEJKH7USWo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/ahrorbek/Documents/ReactLessons/UseReducer/src/App.jsx"],"names":["React","useState","useReducer","Container","App","state","setState","reducer","action","count","dispatch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,SAASC,SAAT,QAA0B,YAA1B;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,CAAD,CAAlC;;AAEA,QAAMM,OAAO,GAAG,CAACF,KAAD,EAAQG,MAAR,KAAmB;AACjC,WAAOH,KAAP;AACD,GAFD;;AAGA,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBR,UAAU,CAACK,OAAD,EAAU,CAAV,CAApC,CANgB,CAQhB;AACA;AACA;AAEA;AACA;AACA;;AAEA,sBACE,QAAC,SAAD;AAAA,2BAEE;AAAA,gBAAOE;AAAP;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAvBD;;GAAML,G;;KAAAA,G;AAyBN,eAAeA,GAAf","sourcesContent":["import React, { useState, useReducer } from \"react\";\nimport { Container } from \"./AppStyle\";\n\nconst App = () => {\n  const [state, setState] = useState(0);\n\n  const reducer = (state, action) => {\n    return state;\n  };\n  const [count, dispatch] = useReducer(reducer, 0);\n\n  // const decreament = () => {\n  //   setState(state - 1);\n  // };\n\n  // const increament = () => {\n  //   setState(state + 1);\n  // };\n\n  return (\n    <Container>\n      {/* <button onClick={decreament}>-</button> */}\n      <span>{count}</span>\n      {/* <button onClick={increament}>+</button> */}\n    </Container>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}